# Maintainer: Simon Hofmann <mail@simon-hofmann.org>
# Contributor: Aetf <aetf@unlimitedcodeworks.xyz>
#
# Based on official OpenCV package by:
# Maintainer: Ray Rashif <schiv@archlinux.org>
# Contributor: Tobias Powalowski <tpowa@archlinux.org>

pkgname=('opencv-contrib' 'opencv-samples-contrib' 'opencv-java-contrib')
pkgver=3.1.0
pkgrel=3
pkgdesc="Open Source Computer Vision Library including additional 'contrib' modules"
arch=('i686' 'x86_64')
license=('BSD')
url="http://opencv.org/"
depends=('intel-tbb' 'openexr' 'xine-lib' 'libdc1394' 'gtkglext')
makedepends=('cmake' 'python2-numpy' 'mesa' 'eigen' 'apache-ant' 'java-environment')
optdepends=('eigen'
            'libcl: For coding with OpenCL'
            'python2-numpy: Python 2.x interface')

source=("${pkgname%-contrib}-$pkgver::https://github.com/Itseez/opencv/archive/$pkgver.zip"
        "${pkgname%-contrib}-$pkgver-contrib::https://github.com/Itseez/opencv_contrib/archive/$pkgver.zip")

md5sums=('6082ee2124d4066581a7386972bfd52a'
         '0d0bfeabe539542791b465ec1c7c90e6')

_cmakeopts=('-D WITH_OPENCL=ON'
            '-D WITH_OPENGL=ON'
            '-D WITH_TBB=ON'
            '-D WITH_XINE=ON'
            '-D WITH_GSTREAMER=OFF'
            '-D BUILD_WITH_DEBUG_INFO=OFF'
            '-D BUILD_TESTS=OFF'
            '-D BUILD_PERF_TESTS=OFF'
            '-D CMAKE_BUILD_TYPE=Release'
            '-D CMAKE_INSTALL_PREFIX=/usr'
            '-D CMAKE_SKIP_RPATH=ON'
# Settings for neural network module'
            '-D BUILD_opencv_dnn=ON'
            '-D BUILD_LIBPROTOBUF_FROM_SOURCES=ON')


# SSE only available from Pentium 3 onwards (i686 is way older)
[[ "$CARCH" = 'i686' ]] && \
  _cmakeopts+=('-D ENABLE_SSE=OFF'
               '-D ENABLE_SSE2=OFF'
               '-D ENABLE_SSE3=OFF')

# all x64 CPUs support SSE2 but not SSE3
[[ "$CARCH" = 'x86_64' ]] && _cmakeopts+=('-D ENABLE_SSE3=OFF')

prepare() {
  cd "$srcdir/${pkgname%-contrib}-$pkgver"
  mkdir -p normal java

  #Add contrib modules
  _cmakeopts+=("-D OPENCV_EXTRA_MODULES_PATH=$srcdir/${pkgname%-contrib}_contrib-${pkgver}/modules")

  cd "$srcdir/${pkgname%-contrib}-$pkgver/normal"
  cmake ${_cmakeopts[@]} \
        -D BUILD_EXAMPLES=ON \
        -D INSTALL_C_EXAMPLES=ON \
        -D INSTALL_PYTHON_EXAMPLES=ON \
        ..

  msg2 "Exporting JAVA_HOME"
  export JAVA_HOME=/usr/lib/jvm/default

  msg2 "Enable dnn module java wrapper"
  sed -i 's/ocv_add_module(dnn opencv_core opencv_imgproc WRAP python matlab)/ocv_add_module(dnn opencv_core opencv_imgproc WRAP python matlab java)/' "${srcdir}/${pkgname/-/_}-${pkgver}/modules/dnn/CMakeLists.txt"
  sed -i 's/ocv_glob_module_sources(${PROTOBUF_SRCS} ${PROTOBUF_HDRS})/ocv_glob_module_sources(SOURCES ${PROTOBUF_SRCS} ${PROTOBUF_HDRS})/' "${srcdir}/${pkgname/-/_}-${pkgver}/modules/dnn/CMakeLists.txt"

  cd "$srcdir/${pkgname%-contrib}-$pkgver/java"
  cmake ${_cmakeopts[@]} \
        -D BUILD_SHARED_LIBS=OFF \
        -D BUILD_EXAMPLES=OFF \
        -D BUILD_FAT_JAVA_LIB=ON \
        ..
}

build() {
  msg2 "Building main lib and samples"
  cd "$srcdir/${pkgname%-contrib}-$pkgver/normal"
  make

  msg2 "Building java bindings"
  cd "$srcdir/${pkgname%-contrib}-$pkgver/java"
  make opencv_java
}

package_opencv-contrib() {
  options=('staticlibs')
  provides=('opencv')
  conflicts=('opencv')

  cd "$srcdir/${pkgname%-contrib}-$pkgver/normal"

  make DESTDIR="$pkgdir" install

  # install license file
  install -Dm644 "$srcdir/${pkgname%-contrib}-$pkgver/LICENSE" \
    "$pkgdir/usr/share/licenses/${pkgname%-contrib}/LICENSE"

  cd "$pkgdir/usr/share"

  # fix path in cmake module files
  sed -r -i -e '/\/OpenCV\//s#/OpenCV/#/opencv/#g' "${pkgdir}/usr/share/opencv/OpenCVModules-release.cmake"

  # separate samples package; also be -R friendly
  if [[ -d OpenCV/samples ]]; then
    rm -rf "$srcdir/${pkgname%-contrib}-samples"
    mv OpenCV/samples "$srcdir/${pkgname%-contrib}-samples"
    rm -rf ${pkgname%-contrib}
    mv OpenCV ${pkgname%-contrib} # otherwise folder naming is inconsistent
  elif [[ ! -d OpenCV ]]; then
    warning "Directory naming issue; samples package may not be built!"
  fi

  # don't need the dynamic version of the java wrapper so
  rm -rf "$pkgdir/usr/share/opencv/java"
}

package_opencv-samples-contrib() {
  pkgdesc+=" (samples)"
  depends=("opencv-contrib=$pkgver") # sample codes change with lib/API
  provides=('opencv-samples')
  conflicts=('opencv-samples')
  unset optdepends

  mkdir -p "$pkgdir/usr/share/opencv"
  cp -r "$srcdir/opencv-samples" "$pkgdir/usr/share/opencv/samples"
  #Copy contrib samples
  cp -rf "$srcdir/${pkgname%-samples-contrib}_contrib-${pkgver}/samples" "$pkgdir/usr/share/opencv/samples"

  # install license file
  install -Dm644 "$srcdir/opencv-$pkgver/LICENSE" \
    "$pkgdir/usr/share/licenses/${pkgname%-contrib}/LICENSE"
}

package_opencv-java-contrib() {
  pkgdesc+=" (java bindings)"
  provides=('opencv-java')
  conflicts=('opencv-java')

  # reduce memory footpoint
  #rm -rf "$srcdir/${pkgname%-java-contrib}-$pkgver/normal"

  cd "$srcdir/${pkgname%-java-contrib}-$pkgver/java"
  
  # Making a fake install
  mkdir -p "$srcdir/temp"
  make DESTDIR="$srcdir/temp" install

  # Creating the package structure
  mkdir -p "$pkgdir/usr/share/opencv/java"
  # Installing the built files
  cp -r "$srcdir/temp/usr/share/OpenCV/java" "$pkgdir/usr/share/opencv"

  # Create a symbolic link in /usr/share/java as Java apps written for Ubuntu may be looking there
  mkdir -p "$pkgdir/usr/share/java/"
  # Get the number in the Jar filename
  #_number=$(echo $pkgver | sed 's/\.//g')
  _number=$(echo $pkgver | sed 's/\.[0-9]$//' | sed 's/\.//g')
  ln -s "/usr/share/opencv/java/opencv-$_number.jar" "$pkgdir/usr/share/java/opencv.jar"

  # Removing the junk
  rm -r "$srcdir/temp"
}
# vim:set ts=2 sw=2 et:
