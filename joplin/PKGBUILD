# Maintainer: Alfredo Palhares <alfredo at palhares dot me>
# Contributor: Aetf <aetf at unlimited-code dot works>
# Contributor: Mark Wagie <mark dot wagie at tutanota dot com>
# Contributor:  Matteo Parolari
# Contributor: gardar <aur@gardar.net>

# Please contribute to:
# https://github.com/alfredopalhares/arch-pkgbuilds

pkgbase="joplin"
pkgname=('joplin')
pkgver=2.7.14
groups=('joplin')
pkgrel=1
install="joplin.install"
arch=('x86_64' 'i686')
makedepends=('git' 'yarn' 'npm' 'rsync' 'electron' 'node-gyp>=8.4.1')
url="https://joplinapp.org/"
license=('MIT')
source=("joplin.desktop" "joplin-desktop.sh"
  "joplin-${pkgver}.tar.gz::https://github.com/laurent22/joplin/archive/v${pkgver}.tar.gz"
)
sha256sums=('c7c5d8b0ff9edb810ed901ea21352c9830bfa286f3c18b1292deca5b2f8febd2'
            'a450284fe66d89aa463d129ce8fff3a0a1a783a64209e4227ee47449d5737be8'
            '9e5b2d3cc2a353f54d1ff6ffd506870a7cbb4d9a67c01eb54d1be036f3881361')

# local npm cache directory
_npm_cache="npm-cache"

_get_cache() {
  if [[ "${_npm_cache}" =~ ^/ ]]; then
    printf "%s" "${_npm_cache}"
  else
    printf "%s" "${srcdir}/${_npm_cache}"
  fi
}

prepare() {
  local cache=$(_get_cache)
  msg2 "npm cache directory: $cache"
  export YARN_CACHE_FOLDER=$cache

  cd "${srcdir}/joplin-${pkgver}"

  msg2 "Disabling husky (git hooks)"
  sed -i '/"husky": ".*"/d' package.json

  # cli app version are not set in this version
  sed -i "s/2.7.0/${pkgver}/" packages/app-cli/package.json
}

build() {
  local cache=$(_get_cache)
  msg2 "npm cache directory: $cache"
  export YARN_CACHE_FOLDER=$cache

  cd "${srcdir}/joplin-${pkgver}"

  # Force Lang
  # INFO: https://github.com/alfredopalhares/joplin-pkgbuild/issues/25
  export LANG=en_US.utf8

  msg2 "Installing dependencies"
  # FSevents is on the optinal dependencies and its Mac Only
  mkdir "${srcdir}/tmp"
  TMPDIR=${srcdir}/tmp yarn install

  msg2 "Build"
  yarn run buildParallel
}

#FIXME: These checks fail on some machines, even with the exit 0
# Something related with the number of allowed processes I guess
check() {
  cd "${srcdir}/joplin-${pkgver}"
  msg2 "Not Running any tests for now"
  #npm run test || exit 0
}

package_joplin() {
  pkgdesc="A note taking and to-do application with synchronization capabilities - CLI App"
  depends=('libsecret' 'nodejs' 'python' 'libvips')

  local cache=$(_get_cache)
  msg2 "npm cache directory: $cache"
  export YARN_CACHE_FOLDER=$cache

  cd "${srcdir}/joplin-${pkgver}"

  msg2 "Installing CLI"
  local cli_packs=$srcdir/cli-packs
  rm -rf "$cli_packs" && mkdir "$cli_packs"
  yarn workspaces foreach --parallel --interlaced --topological --recursive \
    --from 'joplin' \
    exec "[ -d build ] && cd build; npm pack --pack-destination '$cli_packs'"

  npm install --global --production --cache "$cache" --prefix "${pkgdir}/usr" "${cli_packs}"/*.tgz

  msg2 "Installing LICENSE"
  install -Dm644 LICENSE -t "${pkgdir}/usr/share/licenses/${pkgname}/"

  msg2 "Fixing Permissions set by npm"
  # Non-deterministic race in npm gives 777 permissions to random directories.
  # See https://github.com/npm/npm/issues/9359 for details.
  chmod -R u=rwX,go=rX "$pkgdir"

  # npm installs package.json owned by build user
  # https://bugs.archlinux.org/task/63396
  chown -R root:root "$pkgdir"
}

package_joplin-desktop() {
  pkgdesc="A note taking and to-do application with synchronization capabilities - Desktop"
  depends=('electron' 'gtk3' 'libjpeg-turbo' 'libwebp' 'libxss' 'nodejs' 'nss')
  optdepends=('libappindicator-gtk3: for tray icon')
  conflicts=('joplin-desktop-electron')

  # ./generateSha512.js fails if AppImage is not built
  mkdir -p "${srcdir}/joplin-${pkgver}/packages/app-desktop/dist/"
  touch "${srcdir}/joplin-${pkgver}/packages/app-desktop/dist/AppImage"

  msg2 "Building Desktop with packaged Electron..."
  mkdir -p "${pkgdir}/usr/share/joplin-desktop"
  cd "${srcdir}/joplin-${pkgver}/packages/app-desktop"
  electron_dir="/usr/lib/electron"
  electron_version=$(cat /usr/lib/electron/version)
  msg2 "Using Electron Version ${electron_version}"
  # Current version of electron does not work
  USE_HARD_LINKS=false yarn run dist -- --publish=never  --linux  --x64 \
    --dir="dist/"
      # FIXME: Using packaged electron breaks the interface
    #--dir="dist/" -c.electronDist=$electron_dir -c.electronVersion=$electron_version

  # TODO: Cleanup app.asar file
  cd dist/linux-unpacked/
  cp -R "." "${pkgdir}/usr/share/joplin-desktop"

  msg2 "Installing LICENSE..."
  cd "${srcdir}/joplin-${pkgver}/"
  install -Dm644 LICENSE -t "${pkgdir}/usr/share/licenses/${pkgname}"

  msg2 "Installing startup script and desktop file..."
  cd "${srcdir}"
  install -Dm755 ${srcdir}/joplin-desktop.sh "${pkgdir}/usr/bin/joplin-desktop"
  install -Dm644 ${srcdir}/joplin.desktop -t "${pkgdir}/usr/share/applications"

  msg2 "Installing icons"
  local -r src_icon_dir="${srcdir}/joplin-${pkgver}/packages/app-desktop/build/icons"
  local -i size
  for size in 16 22 24 32 36 48 64 72 96 128 192 256 512; do
    [[ -f "${src_icon_dir}/${size}x${size}.png" ]] &&
      install -Dm644 \
        "${src_icon_dir}/${size}x${size}.png" \
        "${pkgdir}/usr/share/icons/hicolor/${size}x${size}/apps/joplin.png"
  done
}

